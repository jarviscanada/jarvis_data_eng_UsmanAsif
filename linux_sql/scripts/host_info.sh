#!/bin/bash

#Setup Arguments
psql_host=$1
port=$2
db_name=$3
user_name=$4
password=$5

lscpu_out=`lscpu`

get_hostname() {
hostname=$(hostname -f)
}

get_cpu_number() {
cpu_number=$(lscpu | egrep "^CPU\(s\):" | awk '{print $2}'| xargs)
}

#Helper function
get_lscpu_value() {
	pattern=$1
	value=$(echo "$lscpu_out" | egrep "$pattern" | awk -F ':' '{print $2}' | xargs)
	echo "value=$value"
		}

get_cpu_architecture() {
			get_lscpu_value "Architecture"
			cpu_architecture=$value
			}
get_cpu_model() {
		get_lscpu_value "Model name"
		cpu_model=$value
		}

get_cpu_mhz() {
		get_lscpu_value "CPU MHz"
		cpu_mhz=$value
		get_lscpu_value "L2 cache"
		l2_cache=${value::-1} # will remove alphabet from INT value
		}

#Step 1: parse data and setup variables
get_hostname
get_cpu_number
get_cpu_architecture
get_cpu_model
get_cpu_mhz
get_l2_cache
#to get the toatal memory
mem1=$(df -BM|head -2  | tail -1 | awk '{print $2}')
total_mem=${mem1::-1}   #will remove alphabet from end of INT value
timestamp=$(date -u "+%Y-%m-%d %H:%M:%S")
# to get the timestamp in format
#Step 2 Construct insert statment
insert_stmt=$(cat <<-END
INSERT INTO host_info (hostname,cpu_number,cpu_architecture,\
cpu_model,cpu_mhz,l2_cache,total_mem,"timestamp")\
VALUES('${hostname}', ${cpu_number},'${cpu_architecture}','${cpu_model}',\
${cpu_mhz}, ${l2_cache},${total_mem},'${timestamp}');
END
)
echo $insert_stmt
#Step 3:Execute INSERT statement
export PGPASSWORD=$password
psql -h $psql_host -p $port -U $user_name -d $db_name -c "$insert_stmt"
sleep 1
#Step 4:Save host_id generated by PSQL table to a local file
host_id=`psql -h localhost -U postgres host_agent -c\
"select id from host_info where hostname='${hostname}'"\
| tail -3 | head -1 | xargs`
echo $host_id > ~/host_id
cat ~/host_id
